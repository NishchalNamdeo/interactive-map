<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>MapmyIndia with Enhanced Polygon Layer</title>
    <script src="https://apis.mapmyindia.com/advancedmaps/v1/9d72a18e97e3d8ed15e22a4f0dd563a8/map_load?v=1.5"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
      body {
        margin: 0;
        font-family: Arial, sans-serif;
      }
      #sidebar {
        display: none;
        position: absolute;
        top: 10%;
        right: -35%;
        width: 30%;
        background-color: #f8f9fa;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        z-index: 1000;
        max-height: 80%;
        overflow-y: auto;
        border-radius: 8px;
        padding: 20px;
        transition: right 0.3s ease-in-out;
      }
      #sidebar.active {
        display: block;
        right: 5%;
      }
      #close-btn {
        position: absolute;
        top: 10px;
        right: 10px;
        background-color: #dc3545;
        color: white;
        border: none;
        border-radius: 50%;
        width: 30px;
        height: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
      }
      #map {
        height: 100vh;
        width: 100%;
      }
    </style>
  </head>
  <body>
    <div id="map" class="border-2 border-blue-500 shadow-lg"></div>

    <div id="sidebar">
      <button id="close-btn" onclick="closeSidebar()">&times;</button>
      <div id="sidebar-content"></div>
    </div>

    <script>
      // Initialize the MapmyIndia map
      let map = new MapmyIndia.Map("map", {
        center: [23.259933, 77.412613],
        zoom: 8,
      });

      let activePolygon = null; // Store reference to the active polygon

      // Inject the GeoJSON data from the backend
      const mapData = <%- JSON.stringify(mapData) %>;

      mapData.features.forEach((feature) => {
        if (feature.geometry.type === "Polygon") {
          const polygonCoords = feature.geometry.coordinates[0].map((coord) => [
            coord[1],
            coord[0],
          ]);

          const polygon = L.polygon(polygonCoords, {
            color: "#007bff",
            fillColor: "#007bff",
            fillOpacity: 0.4,
            weight: 2,
          }).addTo(map);

          // Add hover tooltip
          polygon.bindTooltip(() => {
            return `
              <b>Name:</b> ${feature.properties.name || "N/A"}<br>
              <b>Description:</b> ${feature.properties.description || "N/A"}`;
          });

          // Click handler to show sidebar and highlight polygon
          polygon.on("click", function () {
            if (activePolygon) {
              activePolygon.setStyle({
                color: "#007bff",
                fillColor: "#007bff",
                fillOpacity: 0.4,
              });
            }

            polygon.setStyle({
              color: "#ffeb3b",
              fillColor: "#ffeb3b",
              fillOpacity: 0.6,
            });

            activePolygon = polygon;
            showSidebar(feature.properties);
          });
        }
      });

      function showSidebar(properties) {
        const sidebar = document.getElementById("sidebar");
        const content = document.getElementById("sidebar-content");

        const winnerParty = properties.details?.winner_party
          ? `<table class='table-auto w-full border-collapse border border-gray-300 text-sm'><thead><tr class='bg-gray-200'><th class='border border-gray-300 px-2 py-1'>Year</th><th class='border border-gray-300 px-2 py-1'>Party</th></tr></thead><tbody>${Object.entries(properties.details.winner_party).map(([year, party]) => `<tr><td class='border border-gray-300 px-2 py-1'>${year}</td><td class='border border-gray-300 px-2 py-1'>${party}</td></tr>`).join("")}</tbody></table>`
          : "<p class='text-sm text-gray-500'>No winner party details available.</p>";

        const winningCandidates = properties.details?.winning_candidates
          ? `<table class='table-auto w-full border-collapse border border-gray-300 text-sm'><thead><tr class='bg-gray-200'><th class='border border-gray-300 px-2 py-1'>Name</th><th class='border border-gray-300 px-2 py-1'>Votes</th><th class='border border-gray-300 px-2 py-1'>Party</th></tr></thead><tbody>${properties.details.winning_candidates.map(candidate => `<tr><td class='border border-gray-300 px-2 py-1'>${candidate.name}</td><td class='border border-gray-300 px-2 py-1'>${candidate.votes}</td><td class='border border-gray-300 px-2 py-1'>${candidate.party}</td></tr>`).join("")}</tbody></table>`
          : "<p class='text-sm text-gray-500'>No winning candidates data available.</p>";

        content.innerHTML = `
          <h2 class='text-xl font-bold mb-2'>${properties.name || "Unknown Assembly"}</h2>
          <h3 class='text-lg font-semibold mb-1'>Description:</h3>
          <p class='text-sm mb-3'>${properties.description || "No description available."}</p>
          <h3 class='text-lg font-semibold mb-1'>Winner Party:</h3>
          ${winnerParty}
          <h3 class='text-lg font-semibold mb-1'>Winning Candidates:</h3>
          ${winningCandidates}
        `;

        sidebar.classList.add("active");
      }

      function closeSidebar() {
        const sidebar = document.getElementById("sidebar");
        sidebar.classList.remove("active");

        if (activePolygon) {
          activePolygon.setStyle({
            color: "#007bff",
            fillColor: "#007bff",
            fillOpacity: 0.4,
          });
          activePolygon = null;
        }
      }
    </script>
  </body>
</html>
