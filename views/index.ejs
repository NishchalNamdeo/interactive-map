<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Assembly Map</title>
    <script src="https://apis.mapmyindia.com/advancedmaps/v1/9d72a18e97e3d8ed15e22a4f0dd563a8/map_load?v=1.5"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
      body {
        margin: 0;
        font-family: Arial, sans-serif;
      }
      #sidebar {
        display: none;
        position: absolute;
        top: 10%;
        right: -35%;
        width: 30%;
        background-color: #f8f9fa;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        z-index: 1000;
        max-height: 80%;
        overflow-y: auto;
        border-radius: 8px;
        padding: 20px;
        transition: right 0.3s ease-in-out;
      }
      #sidebar.active {
        display: block;
        right: 5%;
      }
      #close-btn {
        position: absolute;
        top: 10px;
        right: 10px;
        background-color: #dc3545;
        color: white;
        border: none;
        border-radius: 50%;
        width: 20px;
        height: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
      }
      #map {
        height: 100vh;
        width: 100%;
      }
    </style>
  </head>
  <body>
    <div id="map" class=" shadow-lg"></div>

    <div id="sidebar">
      <button id="close-btn" onclick="closeSidebar()">&times;</button>
      <div id="sidebar-content"></div>
    </div>

    <script>
      let map = new MapmyIndia.Map("map", {
        center: [23.259933, 77.412613],
        zoom: 6,
      });
    
      let activePolygon = null;
    
      // Access GeoJSON data from the server
      const mapData = <%- JSON.stringify(mapData) %>;
    
      // Add polygons to the map
      mapData.features.forEach((feature) => {
        if (feature.geometry.type === "Polygon") {
          const polygonCoords = feature.geometry.coordinates[0].map((coord) => [
            coord[1],
            coord[0],
          ]);
    
          const polygon = L.polygon(polygonCoords, {
            color: "#007bff",
            fillColor: "#007bff",
            fillOpacity: 0.4,
            weight: 2,
          }).addTo(map);
    
          // Add tooltip for hover
          polygon.bindTooltip(() => `
            <b>State Name:</b> ${feature.properties.STNAME || "N/A"}<br>
            <b>State Code:</b> ${feature.properties.STCODE11 || "N/A"}
          `);
    
          // Click event to show sidebar with full details
          polygon.on("click", function () {
            if (activePolygon) {
              activePolygon.setStyle({
                color: "#007bff",
                fillColor: "#007bff",
                fillOpacity: 0.4,
              });
            }
    
            polygon.setStyle({
              color: "#ffeb3b",
              fillColor: "#ffeb3b",
              fillOpacity: 0.6,
            });
    
            activePolygon = polygon;
            showSidebar(feature.properties);
          });
        }
      });
    
      // Double-click event to navigate to Parliament Map
      map.on("dblclick", () => {
        window.location.href = "/parliament";
      });
    
      // Show sidebar with GeoJSON properties
      function showSidebar(properties) {
        const sidebar = document.getElementById("sidebar");
        const content = document.getElementById("sidebar-content");
    
        content.innerHTML = `
          <p><b>State Name:</b> ${properties.STNAME || "N/A"}</p>
          <p><b>State Code:</b> ${properties.STCODE11 || "N/A"}</p>
          <p><b>Short Name:</b> ${properties.STNAME_SH || "N/A"}</p>
          <p><b>Shape Length:</b> ${properties.Shape_Length || "N/A"}</p>
          <p><b>Shape Area:</b> ${properties.Shape_Area || "N/A"}</p>
          <p><b>Object ID:</b> ${properties.OBJECTID || "N/A"}</p>
          <p><b>State LGD:</b> ${properties.State_LGD || "N/A"}</p>
        `;
        sidebar.classList.add("active");
      }
    
      // Close sidebar
      function closeSidebar() {
        const sidebar = document.getElementById("sidebar");
        sidebar.classList.remove("active");
    
        if (activePolygon) {
          activePolygon.setStyle({
            color: "#007bff",
            fillColor: "#007bff",
            fillOpacity: 0.4,
          });
          activePolygon = null;
        }
      }
    </script>
    
  </body>
</html>
